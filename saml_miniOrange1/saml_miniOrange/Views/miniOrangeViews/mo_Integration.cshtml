@using Newtonsoft.Json;
@using miniOrange.saml;
@model miniOrange.saml.Model.AppConfigModel;
@{
    Model.PageURL = Model.PageURL.Substring(0, Model.PageURL.IndexOf("?"));
    Dictionary<string, string> appsdict = null;
    Dictionary<string, string> newappsdict = null;
    Dictionary<string, string> idpconfig = null;
    string key_ser_list = "empty";
    string newid = "true";
    if (!String.IsNullOrEmpty(Model.AppList))
    {
        appsdict = JsonConvert.DeserializeObject<Dictionary<string, string>>(Model.AppList);
        List<string> keyList = new List<string>(appsdict.Keys);
        key_ser_list = JsonConvert.SerializeObject(keyList);
    }
    string idp_key = "";
    if (String.IsNullOrEmpty(Model.NewList))
    {
        if (appsdict != null)
        {
            foreach (var app in appsdict)
            {
                idp_key = "appid";
                if (app.Key == Model.Appid)
                {
                    string appconfig = app.Value;
                    if (!String.IsNullOrEmpty(appconfig))
                    {
                        idpconfig = JsonConvert.DeserializeObject<Dictionary<string, string>>(appconfig);
                    }
                }
            }
        }

    }
    else
    {
        if (appsdict != null)
        {
            if (appsdict.ContainsKey(Model.Appid))
            {
                newid = "false";
            }
            else
            {
                newid = "true";
            }
        }
        else
        {
            newid = "true";
        }

        newappsdict = JsonConvert.DeserializeObject<Dictionary<string, string>>(Model.NewList);
        if (newappsdict != null)
        {
            idp_key = "newappid";
            foreach (var app in newappsdict)
            {
                if (app.Key == Model.Appid)
                {
                    string appconfig = app.Value;
                    if (!String.IsNullOrEmpty(appconfig))
                    {
                        idpconfig = JsonConvert.DeserializeObject<Dictionary<string, string>>(appconfig);
                    }
                }
            }
        }
    }

    string c_ex = "<div class=\"row\">\r\n    <div class=\"col-md-4\">\r\n        <h2>Getting started</h2>\r\n        <p>\r\n            This is aa example, which will help you figuring out how to access the user attribute from the session created after succesfull SSO.\r\n        </p>\r\n        <%{ \r\n            string username;\r\n\r\n            if (Session[\"" + Model.SessionAttributePrefix + "\"] != null)\r\n            {\r\n                username = Session[\"" + Model.SessionAttributePrefix + "\"].ToString();\r\n            }\r\n            else\r\n            {\r\n                username = \"Empty\";\r\n            }\r\n        }\r\n        @if(username != null || username != \"\"){\r\n            <h1>Hello, @username</h1>\r\n        }\r\n        else{\r\n            <p><a class=\"btn btn-default\" href=\"ssolink\">SSO Login</a></p>\r\n        }\r\n        \r\n         </div>\r\n</div>";
    string vb_ex = "<div class=\"row\">\r\n    <div class=\"col-md-4\">\r\n        <h2>Getting started</h2>\r\n        <p>\r\n            This is aa example, which will help you figuring out how to access the user attribute from the session created after succesfull SSO.\r\n        </p>\r\n        <p><a class=\"btn btn-default\" href=\"https://go.microsoft.com/fwlink/?LinkId=301865\">Learn more &raquo;</a></p>\r\n        @Code\r\n\r\n            Dim username\r\n\r\n            If (Session(\"" + Model.SessionAttributePrefix + "\") IsNot Nothing) Then\r\n\r\n                username = Session(\"" + Model.SessionAttributePrefix + "\")\r\n            End If\r\n            If (Session(\"" + Model.SessionAttributePrefix + "\") Is Nothing) Then\r\n\r\n                username = \"Nothing\"\r\n\r\n            End If\r\n        End Code\r\n        @Code username End Code\r\n    </div>\r\n</div>";
    string claims_c_ex = "<div class=\"row\">\r\n    <div class=\"col-md-4\">\r\n        <h2>Getting started</h2>\r\n        <p>\r\n            This is aa example, which will help you figuring out how to access the user attribute from the session created after succesfull SSO.\r\n        </p>\r\n        @{ \r\n            string username=\" \";\r\n\r\n            if(User.Identity.IsAuthenticated)\r\n            {\r\n                    username= User.Identity.Name;\r\n            }\r\n        }%>\r\n        <h1>Hello, <%=username%></h1>\r\n        <p><a class=\"btn btn-default\" href=\"https://go.microsoft.com/fwlink/?LinkId=301865\">Learn more »</a></p>\r\n    </div>\r\n</div>";
    string claims_vb_ex = "<div class=\"row\">\r\n    <div class=\"col-md-4\">\r\n        <h2>Getting started</h2>\r\n        <p>\r\n            ASP.NET MVC gives you a powerful, patterns-based way to build dynamic websites that\r\n            enables a clean separation of concerns and gives you full control over markup\r\n            for enjoyable, agile development.\r\n        </p>\r\n        <p><a class=\"btn btn-default\" href=\"https://go.microsoft.com/fwlink/?LinkId=301865\">Learn more »</a></p>\r\n        @Code\r\n\r\n            Dim username As String; \r\n\r\n            If(User.Identity.IsAuthenticated)\r\n            Then\r\n                userame= User.Identity.Name;\r\n            End If\r\n        @Code username End Code\r\n    </div>\r\n</div>";

    string claims_c_db_ex = "string username = String.Empty; \r\n// database connection string\r\nstring constr=\"YOUR DATABASE CONNECTION STRING\";\r\n\r\n\r\nbool ss = User.Identity.IsAuthenticated ?? false;\r\nif(ss)\r\n{\r\n   username= User.Identity.Name;\r\n}\r\n\r\n\r\nif (!String.IsNullOrEmpty(constr))\r\n{\r\n    string dbquery = \"SQL-QUERY-TO-GET-THE-USER-DATA\";\r\n\r\n    //example of database query\r\n    string dbquery = String.Format(\"SELECT * FROM [ASPNET_Database_Plugin].[dbo].[UserTable] where Username='{0}'\",username); \r\n\r\n    SqlDataReader dr;\r\n    using (SqlConnection conn = new SqlConnection(constr))\r\n    {\r\n        using (SqlCommand cmd = new SqlCommand(dbquery, conn))\r\n        {\r\n            conn.Open();\r\n            if (conn.State == ConnectionState.Open)\r\n            {\r\n                dr = cmd.ExecuteReader(CommandBehavior.SingleResult);\r\n                if (dr != null)\r\n                {\r\n                    dr.Read();\r\n\r\n                    //example for accessing values from database reader object\r\n                    int userid = Convert.ToInt32(dr[0]);\r\n                    username = dr[1].ToString();\r\n                    string firstname = dr[2].ToString();\r\n                    string  lastname = dr[3].ToString();\r\n\r\n                    //saving user object into session\r\n                    HttpContext.Current.Session[\"User\"] = new User(userid, username, firstname, lastname);\r\n\r\n                }\r\n            }\r\n            conn.Close();\r\n        }\r\n    }\r\n}\r\n\r\n//Example of user class\r\npublic class User\r\n{\r\n    public int userid;\r\n    public string Username;\r\n    public string firstname;\r\n    public string lastname;\r\n\r\n    public User(int userid,string Username,string firstname,string lastname)\r\n    {\r\n        this.userid = userid;\r\n        this.Username = Username;\r\n        this.firstname = firstname;\r\n        this.lastname = lastname;\r\n    }\r\n}";
    string c_db_ex = "string username = String.Empty; \r\nstring constr = \"\";\r\n// database connection string\r\nstring constr=\"YOUR DATABASE CONNECTION STRING\";\r\nbool ss = HttpContext.Current.Session[\"" + Model.SessionAttributePrefix + "\"] ?? false;\r\n\r\nif(ss)\r\n    username = Session[\"" + Model.SessionAttributePrefix + "\"];\r\n\r\nif (!String.IsNullOrEmpty(constr))\r\n{\r\n    string dbquery = \"SQL-QUERY-TO-GET-THE-USER-DATA\";\r\n\r\n    //example of database query\r\n    string dbquery = String.Format(\"SELECT * FROM [ASPNET_Database_Plugin].[dbo].[UserTable] where Username='{0}'\",username); \r\n\r\n    SqlDataReader dr;\r\n    using (SqlConnection conn = new SqlConnection(constr))\r\n    {\r\n        using (SqlCommand cmd = new SqlCommand(dbquery, conn))\r\n        {\r\n            conn.Open();\r\n            if (conn.State == ConnectionState.Open)\r\n            {\r\n                dr = cmd.ExecuteReader(CommandBehavior.SingleResult);\r\n                if (dr != null)\r\n                {\r\n                    dr.Read();\r\n\r\n                    //example for accessing values from database reader object\r\n                    int userid = Convert.ToInt32(dr[0]);\r\n                    username = dr[1].ToString();\r\n                    string firstname = dr[2].ToString();\r\n                    string  lastname = dr[3].ToString();\r\n\r\n                    //saving user object into session\r\n                    HttpContext.Current.Session[\"User\"] = new User(userid, username, firstname, lastname);\r\n\r\n                }\r\n            }\r\n            conn.Close();\r\n        }\r\n    }\r\n}\r\n\r\n//Example of user class\r\npublic class User\r\n{\r\n    public int userid;\r\n    public string Username;\r\n    public string firstname;\r\n    public string lastname;\r\n\r\n    public User(int userid,string Username,string firstname,string lastname)\r\n    {\r\n        this.userid = userid;\r\n        this.Username = Username;\r\n        this.firstname = firstname;\r\n        this.lastname = lastname;\r\n    }\r\n}";
    string vb_db_ex = "Dim username As String;\r\n\r\nIf(Session(\"" + Model.SessionAttributePrefix + "\") IsNot Nothing)\r\nThen\r\n   username= Session(\"" + Model.SessionAttributePrefix + "\")\r\nEnd If\r\n\r\nIf(constr IsNot Nothing)\r\nThen\r\n    Dim mySqlConn As SqlConnection\r\n    mySqlConn = New SqlConnection(\"YOUR DATABASE CONNECTION STRING\")\r\n\r\n    try\r\n        mySqlConn.Open()\r\n        Dim MystrQ As String\r\n        MystrQ  = \"SQL-QUERY-TO-GET-THE-USER-DATA\"\r\n\r\n        ' Example of database query.\r\n        MystrQ  = \"SELECT UserId(*) FROM UserTable WHERE Username = \\'{0}\\'\", username\r\n        \r\n        myDBCmd  = New SqlCommand( MystrQ , myDBCnn )\r\n        myDBReader  = myDBCmd.ExecuteReader\r\n        myDBReader.Read()\r\n       \r\n        userid As int= Convert.ToInt32(myDBReader[0]);\r\n        username = Convert.ToString(myDBReader[1]);\r\n        firstname As String = Convert.ToString(myDBReader[2]);\r\n        lastname As String = Convert.ToString(myDBReader[3]);\r\n\r\n        'saving user object into session.\r\n        HttpContext.Current.Session(\"User\") = New Users(userid, username, firstname, lastname);\r\n        \r\n        myDBReader.Close()\r\n        myDBCmd.Dispose()\r\n        myDBCnn.Close()\r\n        mySqlConn.Close()\r\n\r\n    Catch errex As Exception\r\n        MessageBox.Show( \"My Database Connection Problem\" )\r\n    End Try  \r\n\r\nEnd If\r\n\r\n\r\n' Example of user class.\r\nPublic Class Users\r\n\r\n    public userid As int;\r\n    public Username As String;\r\n    public firstname As String;\r\n    public lastname As String;\r\n\r\n    Public Property User(userid As int, Username As String, firstname As String, lastname As String)\r\n        Set(userid, Username, firstname, lastname)\r\n            Users.userid = userid;\r\n            Users.Username = Username;\r\n            Users.firstname = firstname;\r\n            Users.lastname = lastname;\r\n        End Set\r\n    End Property\r\n\r\nEnd Class";
    string vb_db_claims = "Dim username As String;\r\n\r\nIf(User.Identity.IsAuthenticated)\r\nThen\r\n   username= User.Identity.Name;\r\nEnd If\r\n\r\nIf(constr IsNot Nothing)\r\nThen\r\n    Dim mySqlConn As SqlConnection\r\n    mySqlConn = New SqlConnection(\"YOUR DATABASE CONNECTION STRING\")\r\n\r\n    try\r\n        mySqlConn.Open()\r\n        Dim MystrQ As String\r\n        MystrQ  = \"SQL-QUERY-TO-GET-THE-USER-DATA\"\r\n\r\n        ' Example of database query.\r\n        MystrQ  = \"SELECT UserId(*) FROM UserTable WHERE Username = \\'{0}\\'\", username;\r\n        \r\n        myDBCmd  = New SqlCommand( MystrQ , myDBCnn )\r\n        myDBReader  = myDBCmd.ExecuteReader\r\n        myDBReader.Read()\r\n       \r\n        userid As int= Convert.ToInt32(myDBReader[0]);\r\n        username = Convert.ToString(myDBReader[1]);\r\n        firstname As String = Convert.ToString(myDBReader[2]);\r\n        lastname As String = Convert.ToString(myDBReader[3]);\r\n\r\n        'saving user object into session.\r\n        HttpContext.Current.Session(\"User\") = New Users(userid, username, firstname, lastname);\r\n        \r\n        myDBReader.Close()\r\n        myDBCmd.Dispose()\r\n        myDBCnn.Close()\r\n        mySqlConn.Close()\r\n\r\n    Catch errex As Exception\r\n        MessageBox.Show( \"My Database Connection Problem\" )\r\n    End Try  \r\n\r\nEnd If\r\n\r\n\r\n' Example of user class.\r\nPublic Class Users\r\n\r\n    public userid As int;\r\n    public Username As String;\r\n    public firstname As String;\r\n    public lastname As String;\r\n\r\n    Public Property User(userid As int, Username As String, firstname As String, lastname As String)\r\n        Set(userid, Username, firstname, lastname)\r\n            Users.userid = userid;\r\n            Users.Username = Username;\r\n            Users.firstname = firstname;\r\n            Users.lastname = lastname;\r\n        End Set\r\n    End Property\r\n\r\nEnd Class";

    string prefix = Model.SessionAttributePrefix;
    string csharpvalue = "string username; <br><br>if(Session[\"" + prefix + "username\"]!=null)<br>{<br>&nbsp;&nbsp;&nbsp;username=Session[\"" + prefix + "username\"].ToString();<br>}<br>";
    string vbvalue = "Dim username<br><br> If(Session(\"" + prefix + "username\") IsNot Nothing) <br>Then<br>&nbsp;&nbsp;&nbsp;username= Session(\"" + prefix + "username\")<br>End If";


    string claimsval = "string username = String.Empty;<br><br> If(User.Identity.IsAuthenticated)<br>{<br>&nbsp;&nbsp;&nbsp;username= User.Identity.Name;<br>}";
    string claimsvalvb = "Dim username As String; <br><br> If(User.Identity.IsAuthenticated)<br>Then<br>&nbsp;&nbsp;&nbsp;username= User.Identity.Name&nbsp;&nbsp;&nbsp;<br>End If";

}

<html>
<head>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.1/css/all.min.css" />
    <link href='https://unpkg.com/boxicons@2.1.1/css/boxicons.min.css' rel='stylesheet'>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.1/css/solid.min.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <link rel="stylesheet" type="text/css" href="~/miniOrangeContent/mo_maincss.css" asp-append-version="true" />
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js" type="text/javascript"></script>
    <link href='https://cdn.jsdelivr.net/gh/LikaloLLC/tourguide.js@0.2.0/tourguide.css' rel='stylesheet'>
    <script src='https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js'></script>
    <script src='https://cdn.jsdelivr.net/gh/LikaloLLC/tourguide.js@0.2.0/tourguide.min.js'></script>
    <script src='https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.0/umd/popper.min.js'></script>
    <script src='https://code.jquery.com/jquery-3.3.1.slim.min.js'></script>

    <title></title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
</head>
<style>
    {
        user-select: none;
        -webkit-tap-highlight-color: transparent;
    }

    *:focus {
        outline: none;
    }

    body {
        font-family: Arial, Helvetica, sans-serif;
        margin: 0;
        background-color: #f1f9f9;
    }

    #app-cover {
        display: table;
        width: 600px;
        margin: 80px auto;
        counter-reset: button-counter;
    }

    .toggle-button-cover {
        display: table-cell;
        position: relative;
        width: 100px;
        height: 50px;
        box-sizing: border-box;
    }


    .button-cover, .knobs, .layer {
        position: absolute;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
    }

    .button {
        position: relative;
        top: 50%;
        width: 74px;
        height: 36px;
        margin: -20px auto 0 auto;
        overflow: hidden;
    }

        .button.r, .button.r .layer {
            border-radius: 100px;
        }

        .button.b2 {
            border-radius: 2px;
        }

    .checkbox {
        position: relative;
        width: 100%;
        height: 100%;
        padding: 0;
        margin: 0;
        opacity: 0;
        cursor: pointer;
        z-index: 3;
    }


    .exp_link {
        color: red;
    }

    #exp_msg {
        position: absolute;
        top: 50%;
        color: white;
        font-size: 23px;
        left: 53%;
        transform: translate(-50%,-50%);
        -ms-transform: translate(-50%,-50%);
    }

    #overlay {
        position: fixed;
        display: none;
        width: 100%;
        height: 100%;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: rgba(0,0,0,0.5);
        z-index: 2;
        cursor: pointer;
    }

    .knobs {
        z-index: 2;
    }

    .layer {
        width: 100%;
        background-color: #ebf7fc;
        transition: 0.3s ease all;
        z-index: 1;
    }

    #button-1 .knobs:before {
        content: "Enabled";
        position: absolute;
        top: 4px;
        left: 4px;
        width: 33px;
        height: 30px;
        color: #fff;
        font-size: 7px;
        font-weight: bold;
        text-align: center;
        line-height: 1.5;
        padding: 9px 4px;
        background-color: #03A9F4;
        border-radius: 50%;
        transition: 0.3s cubic-bezier(0.18, 0.89, 0.35, 1.15) all;
    }
    /*Achal Added this*/
    #button-1 .checkbox:checked + .knobs:before {
        content: "Disabled";
        font-size: 7px;
        width: 33px;
        left: 42px;
        background-color: #f44336;
    }

    #button-1 .checkbox:checked ~ .layer {
        background-color: #fcebeb;
    }

    #button-1 .knobs, #button-1 .knobs:before, #button-1 .layer {
        transition: 0.3s ease all;
    }

    .center {
        margin: auto;
        width: 60%;
        padding: 20px;
        box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);
    }

    .hideform {
        display: none;
    }

    :root {
        --modal-duration: 1s;
        --modal-color: #428bca;
    }

    .modal {
        display: none;
        position: fixed;
        z-index: 1;
        left: 0;
        top: 0;
        height: 100%;
        width: 100%;
        overflow: auto;
        background-color: rgba(0, 0, 0, 0.5);
    }

    .modal-content {
        margin: 10% auto;
        width: 40% !important;
        box-shadow: 0 5px 8px 0 rgba(0, 0, 0, 0.2), 0 7px 20px 0 rgba(0, 0, 0, 0.17);
        animation-name: modalopen;
        animation-duration: var(--modal-duration);
    }

    .modal-header h2,
    .modal-footer h3 {
        margin: 0;
    }

    .modal-header {
        background: var(--modal-color);
        padding: 15px;
        color: #fff;
        border-top-left-radius: 5px;
        border-top-right-radius: 5px;
    }

    .modal-body {
        padding: 10px 20px;
        background: #fff;
    }

    .modal-footer {
        background: var(--modal-color);
        padding: 10px;
        color: #fff;
        text-align: center;
        border-bottom-left-radius: 5px;
        border-bottom-right-radius: 5px;
    }

    .close {
        color: #ccc;
        float: right;
        font-size: 30px;
        color: #fff;
    }

        .close:hover,
        .close:focus {
            color: #000;
            text-decoration: none;
            cursor: pointer;
        }

    keyframes modalopen {
        from

    {
        opacity: 0;
    }

    to {
        opacity: 1;
    }

    }

    .tooltipx {
        position: relative;
        display: inline-block;
    }

        .tooltipx .tooltiptextx {
            visibility: hidden;
            width: var(--widthx);
            background-color: #1d1515d6;
            color: white;
            text-align: center;
            border-radius: 6px;
            padding: 5px 0;
            font-size: 13px;
            font-family: "Helvetica Neue";
            /* Position the tooltip */
            position: absolute;
            z-index: 1;
        }

    .hovertext1 {
        position: relative;
    }

        .hovertext1:before {
            content: attr(data-hover);
            visibility: hidden;
            opacity: 0;
            width: 364px;
            background-color: black;
            color: #fff;
            text-align: center;
            border-radius: 5px;
            padding: 13px 7px;
            transition: opacity 1s ease-in-out;
            font-weight: bold;
            position: absolute;
            z-index: 1;
            left: 0;
            top: 110%;
        }

        .hovertext1:hover:before {
            opacity: 1;
            visibility: visible;
            position: absolute;
            top: 1em;
            left: 7em;
        }

    .hovertext {
        position: relative;
    }

        .hovertext:before {
            content: attr(data-hover);
            visibility: hidden;
            opacity: 0;
            width: 364px;
            background-color: black;
            color: #fff;
            text-align: center;
            border-radius: 5px;
            padding: 13px 7px;
            transition: opacity 1s ease-in-out;
            position: absolute;
            z-index: 1;
            left: 0;
            top: 110%;
            font-weight: bold;
            font-weight: bold;
        }

        .hovertext:hover:before {
            opacity: 1;
            visibility: visible;
            position: absolute;
            top: 1em;
            left: 17em;
        }


    .container {
        position: absolute;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
        height: 40px;
        margin: auto;
        text-align: center;
    }

    /** Switch
         -------------------------------------*/

    .switch input {
        position: absolute;
        opacity: 0;
    }

    /**
         * 1. Adjust this to size
         */

    .switch {
        display: inline-block;
        font-size: 20px; /* 1 */
        height: 1em;
        width: 2em;
        background: #c6d7e5;
        border-radius: 1em;
    }

        .switch div {
            height: 1em;
            width: 1em;
            border-radius: 1em;
            background: #803c006e;
            box-shadow: 0 0.1em 0.3em rgba(0,0,0,0.3);
            -webkit-transition: all 300ms;
            -moz-transition: all 300ms;
            transition: all 300ms;
        }

        .switch input:checked + div {
            transform: translate3d(100%, 0, 0);
            background: #00800099;
        }



    .tooltipx:hover .tooltiptextx {
        visibility: visible;
    }

    .inline {
        margin-top: 1em;
    }

    .enable-disable-with-checkbox-wrapper {
        display: inline-flex;
    }


    /* Style the buttons inside the tab */
    .tab button {
        background-color: inherit;
        float: left;
        border: none;
        outline: none;
        cursor: pointer;
        padding: 14px 16px;
        transition: 0.3s;
        font-size: 17px;
    }

    .tab-content > .tab-pane {
        display: none;
    }

    .tab-content > .active {
        display: block;
    }
    /* Change background color of buttons on hover */
    .tab button:hover {
        background-color: #ddd;
    }

    /* Create an active/current tablink class */
    .tab button.active {
        background-color: #ccc;
    }

    /* Style the tab content */
    .tabcontent {
        display: none;
        padding: 6px 12px;
        border: 1px solid #ccc;
        border-top: none;
    }
</style>



<script type="text/javascript">

    function show_first() {
        var session = document.getElementById("session_code");
        var claims = document.getElementById("claims_code");
        var s_btn = document.getElementById("Session_btn");
        var c_btn = document.getElementById("Claims_btn");
        var example_session = document.getElementById("example_session");
        var example_claims = document.getElementById("example_claims");


        session.style.display = "none";
        claims.style.display = "flex";

        example_session.style.display = "none";
        example_claims.style.display = "block";

        s_btn.style.background = "white";
        c_btn.style.background = "#e7f3fe";
    }

    function show_second() {

        var session = document.getElementById("session_code");
        var claims = document.getElementById("claims_code");
        var s_btn = document.getElementById("Session_btn");
        var c_btn = document.getElementById("Claims_btn");
        var example_session = document.getElementById("example_session");
        var example_claims = document.getElementById("example_claims");

        claims.style.display = "none";
        session.style.display = "flex";

        example_session.style.display = "block";
        example_claims.style.display = "none";

        s_btn.style.background = "#e7f3fe";
        c_btn.style.background = "white";
    }


    function copyToClipboard(id) {
        var snippet = document.getElementById(id).value;
        var dummy = document.createElement("textarea");
        document.body.appendChild(dummy);
        dummy.value = snippet;
        dummy.select();
        document.execCommand("copy");
        document.body.removeChild(dummy);
        alert("Code copied to your clipboard !!");
    }

    function click_first() {
        document.getElementById("Claims_btn").click();
    }

    function click_ex_tab(id) {

        var content = document.getElementById(id);
        var box_id = "arrow_" + id;
        var box_icon = document.getElementById(box_id).innerHTML;

        if (content.style.display == "block") {
            content.style.display = "none";
        }
        else {
            content.style.display = "block";

        }
    }

    function copy_ex(id) {
        var id_text = "t_" + id;
        copyToClipboard(id_text);
    }


    $(document).ready(function () {
        if (@Model.IntegrationTour == true) {
            var tourguide = new Tourguide();
            function startTour() {
                tourguide.start();
                document.getElementById("ex_heading").click();
            }
            var tourbutton = document.getElementById("tourbutton");
            tourbutton.addEventListener("click", startTour);
            var tour_button = document.getElementById("tourbutton");
            tour_button.click();
        }
        var tourguide = new Tourguide();
        function startTour() {
            tourguide.start();
            document.getElementById("ex_heading").click();
        }
        var tourbutton = document.getElementById("tourbutton");
        tourbutton.addEventListener("click", startTour);
    });


</script>

<body onload="click_first()">
    <header class="app-header" style="padding-top:1em; width:102%;display:flex;justify-content:space-between">
        <div style="margin-left: 1em;">
            <h3 style="font-weight:normal;"><img src="https://plugins.miniorange.com/wp-content/uploads/2022/05/dnn-miniorange-guide-logo.webp" style="width:6%; margin-right: 0.375em;"></img>miniOrange ASP.NET SAML SSO Middleware v7.0.2</h3>
        </div>
        <div class="drpdwn" style="margin-right:1%">
            <button class="dropbtn">
                <div style="display:flex;">
                    <i class="fa fa-user fa-lg" style="margin-top:3%;"></i>
                    <span style="margin-left: 10px;"> @Model.AdminEmail</span>
                </div>
            </button>
            <div class="drpdwn-content">
                <a href="@Model.Baseurl?ssoaction=config&option=logout">Logout</a>
                <a href="@Model.Baseurl?ssoaction=config&tab=account">Account Setup</a>
            </div>
        </div>
    </header>

    <div class="app-sidebar__overlay" data-toggle="sidebar">
    </div>
    <aside class="app-sidebar">
        <div class="app-sidebar__user" style="padding-left: 40px">
            <div style="margin-left: 15px;">
                <p class="app-sidebar__user-name">ASP.NET SAML</p>
                <p class="app-sidebar__user-designation">Middleware v7.0.2</p>
            </div>
        </div>
        <ul class="app-menu">
            <li><a class="app-menu__item" href="@Model.PageURL?ssoaction=config&tab=appconfig&@idp_key=@Model.Appid&multitenant=@Model.isMultiTenant"><i class="app-menu__icon fa fa-cogs"></i><span class="app-menu__label">Identity Provider Settings</span></a></li>
            <li><a class="app-menu__item" href="@Model.Baseurl?ssoaction=config&tab=attributeandrolemapping&appid=@Model.Appid&multitenant=@Model.isMultiTenant"><i class="app-menu__icon fa fa-user-plus"></i><span class="app-menu__label">Attribute/Role Mapping</span></a></li>
            <li><a class="app-menu__item" href="@Model.Baseurl?ssoaction=config&tab=loginsetup&appid=@Model.Appid&multitenant=@Model.isMultiTenant"><i class="app-menu__icon fa fa-key"></i><span class="app-menu__label">Login Settings</span></a></li>
            <li><a class="app-menu__item active" href="@Model.Baseurl?ssoaction=config&tab=integrationcode&appid=@Model.Appid&multitenant=@Model.isMultiTenant"><i class="app-menu__icon bx bx-code-alt"></i><span class="app-menu__label">Integration Steps</span></a></li>
            <li><a class="app-menu__item" href="@Model.Baseurl?ssoaction=config&tab=troubleshoot&appid=@Model.Appid&multitenant=@Model.isMultiTenant"><i class="app-menu__icon bx bxs-grid"></i><span class="app-menu__label">Troubleshooting</span></a></li>
            <li><a class="app-menu__item" href="https://faq.miniorange.com/kb/asp-net/" target="_blank"><i class="app-menu__icon bx bx-help-circle"></i><span class="app-menu__label">FAQs</span><i class="app-menu__icon bx bx-link-external"></i></a></li>
        </ul>
    </aside>

    <main class="app-content">
        <div class="app-title">
            <div>
                <h1>
                    <a href="@Model.Baseurl?ssoaction=config&tab=applicationlist">
                        <div data-toggle="tooltip" title="Back to Application List" style="margin-right: 15px; font-weight: bolder; color: #0085ba;" class="bx bx-left-arrow-circle">
                        </div>
                    </a>
                    Integration Steps
                </h1>
            </div>
            <ul class="app-breadcrumb breadcrumb">
                <li class="breadcrumb-item"><i class="fa fa-home fa-lg"></i></li>
                <li class="breadcrumb-item"><a href="#">Integration Steps: </a></li>
            </ul>
        </div>
        <div class="row">
            <div class="col-md-12">
            </div>
        </div>
        <div class="tile">
            <div class="tour_div">
                <legend style="font-weight: 600;">Integration Steps: </legend>

                <button id="tourbutton" class="tour_button"><i class="bx bxs-caret-right-circle" style="font-size:30px;"></i> Setup Tour</button>

            </div>
            <div class="info_tour">Below steps will help you with integrating SSO in your ASP.NET web-applications (MVC, Webforms, Web API, etc.). Want to have a tour for the Integration Steps? Just click on the <span style="color:orangered;">Setup Tour</span> button now.</div>
            <div class="row" style="padding-left:3em;">
                <div class="form-group" style="width: 94%;">
                </div>
                <div class="step-div">Step 2: Select mode for SSO user attributes and integration code with example</div>
                <hr />
                <div style="width:100%">
                    <div style="width:40%;" data-tour="step: 1; title: Select mode for storing SSO user attributes; content: Select where you want to store the user data according to the exisitng architecture of your application. This trial module comes with support of Claims based authentication only.">
                        <div id="Claims_btn" class="session_tabs" onclick="show_first()" style="width:50%; border-top-right-radius: 3px;">User Claims</div>
                    </div>

                    <div style="border:1px solid #8080807a; padding:2em; border-radius:3px; border-top-left-radius: 0px;" aria-label="Basic example">

                        <div id="session_code" style="display:flex;margin-bottom: 2em; width: 100%;">
                            <div id="first_c_code" style="width:50%">
                                <div id="C_Sharpbtn" class="snippet_tabs"> C#</div>
                                <div id="C_Sharp_snippet" class="snippet_content">
                                    @Html.Raw(csharpvalue)
                                </div>
                            </div>
                            <div id="first_vb_code" style="width:50%">
                                <div id="VBbtn" class="snippet_tabs"> VB.net </div>
                                <div id="VB_snippet" class="snippet_content">
                                    @Html.Raw(vbvalue)
                                </div>
                            </div>
                        </div>

                        <div id="example_session">
                            <div id="example_C">
                                <div id="ex_heading" class="snippet_tabs" onclick="click_ex_tab('ex_code')" style="margin-bottom:2px;"> C# Example <span id="arrow_ex_code"><i class="bx bxs-down-arrow"></i></span></div>
                                <div id="ex_code" class="snippet_content" style="display:none; margin-bottom: 0.35em; background:white;">
                                    <div>
                                        <div class="ex_header">
                                            <p style="margin:3px;">Fetch user data directly from session variable</p>
                                            <span style="font-size: 20px; cursor: pointer;"><a href="@Model.Baseurl?ssoaction=config&option=downloadExample&type=BrowserSession_C" style="color:white;"><i class="bx bx-download" style="margin-inline:3px; font-weight:600;"></i></a><i id="c_code" class="bx bx-copy" style="margin-inline:3px; font-weight:600;" onclick="copy_ex(this.id);"></i></span>
                                        </div>
                                        <div>
                                            <textarea id="t_c_code" class="text_area_ex" rows="10" cols="30" style="color:#e9cbe1" readonly>@c_ex</textarea>
                                        </div>
                                    </div>
                                    <div style="margin-top: 2em;">
                                        <div class="ex_header">
                                            <p style="margin:3px;">Fetch user data from database</p>
                                            <span style="font-size: 20px; cursor: pointer;"><a href="@Model.Baseurl?ssoaction=config&option=downloadExample&type=DatabaseSession_C" style="color:white;"><i class="bx bx-download" style="margin-inline:3px; font-weight:600;"></i></a><i id="c_database_code" class="bx bx-copy" style="margin-inline:3px; font-weight:600;" onclick="copy_ex(this.id);"></i></span>
                                        </div>
                                        <div>
                                            <textarea id='t_c_database_code' class='text_area_ex' rows='10' cols='30' style='color:#e9cbe1'>@c_db_ex</textarea>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div id='example_VB'>
                                <div id='ex_vb_heading' class='snippet_tabs' onclick="click_ex_tab('ex_vb_code')"> VB.net Example <span id='arrow_ex_vb_code'><i class='bx bxs-down-arrow'></i></span></div>
                                <div id='ex_vb_code' class='snippet_content' style='display:none; background:white;'>
                                    <div>
                                        <div class='ex_header'>
                                            <p style='margin:3px;'>Fetch user data directly from session variable</p>
                                            <span style='font-size: 20px; cursor: pointer;'><a href='@Model.Baseurl?ssoaction=config&option=downloadExample&type=BrowserSession_VB' style='color:white;'><i class='bx bx-download' style='margin-inline:3px; font-weight:600;'></i></a><i id='vb_code' class='bx bx-copy' style='margin-inline:3px; font-weight:600;' onclick='copy_ex(this.id);'></i></span>
                                        </div>
                                        <div>
                                            <textarea id='t_vb_code' class='text_area_ex' rows='10' cols='30' style='color:#bdd8e3eb'>@vb_ex</textarea>
                                        </div>
                                    </div>
                                    <div style='margin-top: 2em;'>
                                        <div class='ex_header'>
                                            <p style='margin:3px;'>Fetch user data from database</p>
                                            <span style='font-size: 20px; cursor: pointer;'><a href='@Model.Baseurl?ssoaction=config&option=downloadExample&type=DatabaseSession_VB' style='color:white;'><i class='bx bx-download' style='margin-inline:3px; font-weight:600;'></i></a><i id='vb_database_code' class='bx bx-copy' style='margin-inline:3px; font-weight:600;' onclick='copy_ex(this.id);'></i></span>
                                        </div>
                                        <div>
                                            <textarea id='t_vb_database_code' class='text_area_ex' rows='10' cols='30' style='color:#bdd8e3eb'>@vb_db_ex</textarea>
                                        </div>

                                    </div>
                                </div>
                            </div>
                        </div>
                        <div id='claims_code' style='display:flex; margin-bottom: 2em; width:100%;' data-tour="step: 2; title:  Sample Integration Code to retrieve username; content: You can now see the integration code according to the selected type of authentication.">
                            <div id='second_code' style='width:100%;'>
                                <div id='FAbtn' class='snippet_tabs'>
                                    C#
                                </div>
                                <div id='FA_snippet' class='snippet_content' data-tour="step: 3; title:  Copy & paste sample SSO integration in your application; content: Copy and Add the Integration Code according to your application specification. For eg., If you have custom C# application then paste the code below C# tab where you want to access the user attributes to create the sessions.">
                                    @Html.Raw(claimsval)
                                </div>
                            </div>
                        </div>

                        <div id='example_claims' data-tour="step: 4; title: Example integration codes; content: If you still have any confusion about how to add integration code in you application you can refer to the example by clicking on your application type">
                            <div id='sec_example_C'>
                                <div id='sec_ex_heading' class='snippet_tabs' onclick='click_ex_tab("sec_ex_code")' style='margin-bottom:2px;'>
                                    C# Example
                                    <span id='arrow_sec_ex_code'>
                                        <i class='bx bxs-down-arrow'></i>
                                    </span>
                                </div>
                                <div id='sec_ex_code' class='snippet_content' style='display:none; margin-bottom: 0.35em; background:white;'>
                                    <div>
                                        <div class='ex_header'>
                                            <p style='margin:3px;'>Fetch user data directly from session variable</p>
                                            <span style='font-size: 20px; cursor:pointer;'><a href='@Model.Baseurl?ssoaction=config&option=downloadExample&type=BrowserClaims_C' style='color:white;'><i class='bx bx-download' style='margin-inline:3px; font-weight:600;'></i></a><i id='claim_c_code' class='bx bx-copy' style='margin-inline:3px; font-weight:600;' onclick='copy_ex(this.id);'></i></span>
                                        </div>
                                        <div>
                                            <textarea id='t_claim_c_code' class='text_area_ex' rows='10' cols='30' style='color:#e9cbe1' readonly>@claims_c_ex</textarea>
                                        </div>
                                    </div>
                                    <div style='margin-top: 2em;'>
                                        <div class='ex_header'>
                                            <p style='margin:3px;'>Fetch user data from database</p>
                                            <span style='font-size: 20px; cursor:pointer;'><a href='@Model.Baseurl?ssoaction=config&option=downloadExample&type=Database_Claims_C' style='color:white;'><i class='bx bx-download' style='margin-inline:3px; font-weight:600;'></i></a><i id='claim_c_d_code' class='bx bx-copy' style='margin-inline:3px; font-weight:600;' onclick='copy_ex(this.id);'></i></span>
                                        </div>
                                        <div>
                                            <textarea id='t_claim_c_d_code' class='text_area_ex' rows='10' cols='30' style='color:#e9cbe1' readonly>@claims_c_db_ex</textarea>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
    </main>
</body>
</html>
